//
//
//
// Init AOS
//
//
//

if (window.AOS !== undefined) {
    AOS.init({
        offset: 100,
        duration: 1000,
        disable: () => window.matchMedia("(max-width: 576px)").matches,
        once: true,
        delay: 100,
    });
}

//
//
//
//  Leaflet - Maps
//

// Intersection Observer for Map on Home Page and Contact Page, for better performance and to avoid loading all maps at once.
const dataMap = document.querySelectorAll("[data-map='true']");
const observer = new IntersectionObserver(
    (entries) => {
        entries.forEach((entry) => {
            if (!entry.isIntersecting) return;
            // INIT MAP
            //
            //  Leaflet HOME -  Map ul. Wybickiego 5 31-302 Kraków
            //
            const mapLocation = document.getElementById("map-location");

            if (mapLocation) {
                let $coordinates = [50.08364333111011, 19.927406335782383]; // ul. Wybickiego 5 31-302 Kraków
                var map = L.map("map-location").setView($coordinates, 13);

                L.tileLayer("https://tile.openstreetmap.org/{z}/{x}/{y}.png", {
                    maxZoom: 22,
                }).addTo(map);

                var myIcon = L.icon({
                    iconUrl: "/images/map-icon.png",
                    iconSize: [83, 121],
                    iconAnchor: [66, 112],
                });

                var marker = L.marker($coordinates, { icon: myIcon }).addTo(map);
            }
            observer.unobserve(entry.target);
        });
    },
    {
        rootMargin: "150px",
    }
);

dataMap.forEach((element) => {
    observer.observe(element);
});

//
//
//
//
//
// SLICK SLIDERS
//
//

//  SLIDER || Right
const slickRight = document.querySelector(".slick-slider-right");
if (slickRight) {
    $(document).ready(function () {
        $(".slick-slider-right").slick({
            dots: false,
            infinite: false,
            speed: 500,
            slidesToShow: 1,
            slidesToScroll: 1,
            variableWidth: true,
            prevArrow: $(".slick-slider-right-prev"),
            nextArrow: $(".slick-slider-right-next"),
            responsive: [
                {
                    breakpoint: 992,
                    settings: {
                        slidesToShow: 2,
                        slidesToScroll: 1,
                        variableWidth: false,
                    },
                },
                {
                    breakpoint: 576,
                    settings: {
                        slidesToShow: 1,
                        slidesToScroll: 1,
                        centerMode: true,
                        infinite: true,
                        centerPadding: "15px",
                    },
                },
            ],
        });

        AOS.refresh();
    });
}

//  SLIDER || Left
const slickLeft = document.querySelector(".slick-slider-left");
if (slickLeft) {
    $(document).ready(function () {
        $(".slick-slider-left").slick({
            dots: false,
            infinite: false,
            speed: 500,
            slidesToShow: 1,
            slidesToScroll: 1,
            variableWidth: true,
            rtl: true,
            prevArrow: $(".slick-slider-left-prev"),
            nextArrow: $(".slick-slider-left-next"),
            responsive: [
                {
                    breakpoint: 992,
                    settings: {
                        slidesToShow: 2,
                        slidesToScroll: 1,
                        variableWidth: false,
                    },
                },
                {
                    breakpoint: 576,
                    settings: {
                        slidesToShow: 1,
                        slidesToScroll: 1,
                        centerMode: true,
                        infinite: true,
                        centerPadding: "15px",
                    },
                },
            ],
        });

        AOS.refresh();
    });
}

//
//
//
//
//
// Counter
//
//

class Counter {
    constructor(element, targetValue, duration = 2000) {
        this.element = element;
        this.targetValue = targetValue;
        this.duration = duration;
        this.startValue = 0;
        this.startTime = null;
    }

    animate = (currentTime) => {
        if (!this.startTime) this.startTime = currentTime;
        const progress = currentTime - this.startTime;
        const value = Math.min(
            this.startValue + (progress / this.duration) * this.targetValue,
            this.targetValue
        );
        this.element.textContent = Math.floor(value);
        if (value < this.targetValue) {
            requestAnimationFrame(this.animate);
        }
    };

    start() {
        requestAnimationFrame(this.animate);
    }
}

const numbersArr = document.querySelectorAll("[data-number]");
if (numbersArr.length > 0) {
    const observerNumber = new IntersectionObserver(
        (entries) => {
            entries.forEach((entry) => {
                if (entry.isIntersecting) {
                    const numberPattern = /\d+/g;
                    let number = entry.target.dataset.number;
                    let reg = number.match(numberPattern);
                    const counter = new Counter(entry.target, reg[0]);
                    counter.start();
                    observerNumber.unobserve(entry.target);
                }
            });
        },
        {
            rootMargin: "50px",
        }
    );
    numbersArr.forEach((element) => {
        observerNumber.observe(element);
    });
}

//
//
//
// Add non-breaking space after single letter
//
document.addEventListener("DOMContentLoaded", () => {
    document.querySelectorAll("p").forEach(function (p) {
        p.innerHTML = p.innerHTML.replace(/ (\w) /g, " $1&nbsp;");
    });
});

//
//
//
//
// Changing rows to columns
//

const mainAxis = document.querySelector("#main-ap-axis");
const buttons = document.querySelector(".row-grid-btns");

if (mainAxis) {
    const rows = mainAxis.querySelectorAll("[data-axis='row']");
    const rowBtn = buttons.querySelector(".row-btn");
    const gridBtn = buttons.querySelector(".grid-btn");

    const setActiveButton = (activeButton) => {
        rowBtn.classList.toggle("active", activeButton === rowBtn);
        gridBtn.classList.toggle("active", activeButton === gridBtn);
    };

    const handleMediaQuery = (mediaQuery) => {
        if (mediaQuery.matches) {
            rows.forEach((row) => {
                row.classList.add("main-ap-box-grid");
            });
            setActiveButton(gridBtn);
        } else {
            rows.forEach((row) => {
                row.classList.remove("main-ap-box-grid");
            });
            setActiveButton(rowBtn);
        }
    };

    const mediaQuery = window.matchMedia("(max-width: 767px)");
    handleMediaQuery(mediaQuery);
    mediaQuery.addListener(handleMediaQuery);

    gridBtn.addEventListener("click", () => {
        rows.forEach((row) => {
            row.classList.add("main-ap-box-grid");
        });
        setActiveButton(gridBtn);
    });

    rowBtn.addEventListener("click", () => {
        rows.forEach((row) => {
            row.classList.remove("main-ap-box-grid");
        });
        setActiveButton(rowBtn);
    });
}

//
//
//
// Images comparison
//
//

const imagesCompare = document.querySelector(".images-compare");
const compareSlider = document.querySelector(".compare-slider");
if (compareSlider) {
    compareSlider.addEventListener("input", (e) => {
        imagesCompare.style.setProperty("--position", `${e.target.value}%`);
    });
}
